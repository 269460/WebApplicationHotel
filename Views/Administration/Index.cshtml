<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Room</title>
</head>
<body>
<form id="addRoomForm">
    <label for="number">Number:</label>
    <input type="text" id="number" name="number" required><br><br>

    <label for="description">Description:</label>
    <input type="text" id="description" name="description" required><br><br>

    <label for="capacity">Capacity:</label>
    <input type="number" id="capacity" name="capacity" required><br><br>

    <label for="price">Price:</label>
    <input type="number" id="price" name="price" required><br><br>


    <input type="button" onclick="submitForm()" value="Add Room">
</form>

<title>Rooms List</title>
<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }
    th, td {
        padding: 10px; /* Add padding inside each cell */
        text-align: left; /* Align text to the left */
    }
    th {
        background-color: #f2f2f2; /* Add background color to header */
    }
    tr:nth-child(even) {
        background-color: #f9f9f9; /* Add background color to even rows */
    }
    table, th, td {
        border: 1px solid black; /* Add borders to table, headers, and cells */
    }
</style>

<h1>Rooms List</h1>
<table>
    <thead>
    <tr>
        <th>Number</th>
        <th>Description</th>
        <th>Capacity</th>
        <th>Price</th>
        <th>Delete</th>
    </tr>
    </thead>
    <tbody id="roomsList">
    <!-- W tym miejscu zostaną wstawione dane z bazy danych -->
    </tbody>
</table>

<script>
    async function submitForm() {
        const form = document.getElementById('addRoomForm');
        const formData = new FormData(form);

        const room = {
            Number: formData.get('number'),
            Description: formData.get('description'),
            Capacity: parseInt(formData.get('capacity')),
            Price: parseFloat(formData.get('price')),
        };

        try {
            const response = await fetch('/rooms', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(room)
            });

            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(errorText);
            }

            const result = await response.json();
            console.log('Room added successfully:', result);

            // Odśwież listę pokoi po dodaniu nowego pokoju
            fetchRooms();
        } catch (error) {
            console.error('Error adding room:', error);
        }
    }

    async function fetchRooms() {
        try {
            const response = await fetch('/rooms');
            const rooms = await response.json();

            console.log(rooms);

            const roomsList = document.getElementById('roomsList');

            roomsList.innerHTML = ''; // Wyczyść listę pokoi przed dodaniem nowych danych

            rooms.forEach(room => {
                const row = document.createElement('tr');

                row.innerHTML = `
                        <td>${room.number}</td>
                        <td>${room.description}</td>
                        <td>${room.capacity}</td>
                        <td>${room.price}</td>
                        <td><button onclick="deleteRoom(${room.roomId})">Delete</button></td>
                    `;

                roomsList.appendChild(row);
            });
        } catch (error) {
            console.error('Error fetching rooms:', error);
        }
    }

    async function deleteRoom(roomId) {
        try {
            const response = await fetch(`/rooms/${roomId}`, {
                method: 'DELETE'
            });

            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            // Refresh the list after deletion
            fetchRooms();
        } catch (error) {
            console.error('Error deleting room:', error);
        }
    }

    // Wywołaj funkcję fetchRooms() po załadowaniu strony
    document.addEventListener('DOMContentLoaded', fetchRooms);
</script>
</body>
</html>